name: Open Manus AI CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to Render'
        required: false
        default: 'false'
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov flake8
      
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Test with pytest
        run: |
          pytest --cov=src tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build main application Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: open-manus-ai:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Telegram bot Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.telegram
          push: false
          tags: open-manus-telegram:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' || github.event.inputs.deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-cvl1m2a4d50c73e0pkdg?key=SjaQiBUV2cM"
      
      - name: Wait for deployment to complete
        run: |
          echo "Waiting for deployment to complete..."
          sleep 60
      
      - name: Verify deployment
        run: |
          curl -s https://open-manus-ai.onrender.com/ > /dev/null
          if [ $? -eq 0 ]; then
            echo "Deployment successful!"
          else
            echo "Deployment verification failed."
            exit 1
          fi
